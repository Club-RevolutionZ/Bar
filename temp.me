Ice cream
sweet
punishments
chocolate
rice
fries
Bun http://en.wikipedia.org/wiki/Category:Buns
http://en.wikipedia.org/wiki/Category:Cookies
http://en.wikipedia.org/wiki/Category:Doughnuts

,
    "eatfood": "/me For the brtender himself",
    "nouserfood": "/me doesn't see %%NAME%% in room SUM1 who can't be found in room",
    "selffood": "' @%%NAME%% FOR selfish user who bought for themself",
    "food": "/me @%%NAMETO%%, @%%NAMEFROM%% %%FOOD%%"

    
            
            pizzaCommand: {
                command: 'pizza',
                rank: 'user',
                type: 'startsWith',
                pizzas: ['has bought you a Chicken pizza!',
                    'has bought you a Hawaiian pizza!',
                    'has bought you a half eaten pizza.'
                ],
                getPizza: function () {
                    var c = Math.floor(Math.random() * this.piza.length);
                    return this.pizzas[c];
                },
                functionality: function (chat, cmd) {
                    if (this.type === 'exact' && chat.message.length !== cmd.length) return void (0);
                    if (!basicBot.commands.executable(this.rank, chat)) return void (0);
                    else {
                        var msg = chat.message;

                        var space = msg.indexOf(' ');
                        if (space === -1) {
                            API.sendChat(basicBot.chat.eatpizza);
                            return false;
                        }
                        else {
                            var name = msg.substring(space + 2);
                            var user = basicBot.userUtilities.lookupUserName(name);
                            if (user === false || !user.inRoom) {
                                return API.sendChat(subChat(basicBot.chat.nouserpizza, {name: name}));
                            }
                            else if (user.username === chat.un) {
                                return API.sendChat(subChat(basicBot.chat.selfpizza, {name: name}));
                            }
                            else {
                                return API.sendChat(subChat(basicBot.chat.pizza, {nameto: user.username, namefrom: chat.un, pizza: this.getPizza()}));
                            }
                        }
                    }
                }
            },
