 
    BarTender:
    {
            pizzaCommand: {
                command: 'pizza',
                rank: 'user',
                type: 'startsWith',
                pizzas: ['has bought you a Chicken pizza!',
                    'has bought you a Hawaiian pizza!',
                    'has bought you a half eaten pizza.'
                ],
                getPizza: function () {
                    var c = Math.floor(Math.random() * this.piza.length);
                    return this.pizzas[c];
                },
                functionality: function (chat, cmd) {
                    if (this.type === 'exact' && chat.message.length !== cmd.length) return void (0);
                    if (!basicBot.commands.executable(this.rank, chat)) return void (0);
                    else {
                        var msg = chat.message;

                        var space = msg.indexOf(' ');
                        if (space === -1) {
                            API.sendChat(basicBot.chat.eatpizza);
                            return false;
                        }
                        else {
                            var name = msg.substring(space + 2);
                            var user = basicBot.userUtilities.lookupUserName(name);
                            if (user === false || !user.inRoom) {
                                return API.sendChat(subChat(basicBot.chat.nouserpizza, {name: name}));
                            }
                            else if (user.username === chat.un) {
                                return API.sendChat(subChat(basicBot.chat.selfpizza, {name: name}));
                            }
                            else {
                                return API.sendChat(subChat(basicBot.chat.pizza, {nameto: user.username, namefrom: chat.un, pizza: this.getPizza()}));
                            }
                        }
                    }
                }
            },
            
            chipsCommand: {
                command: 'chips',
                rank: 'user',
                type: 'startsWith',
                chipss: ['has bought you a small bag of Potato chips!',
                    'has bought you a large bag of BBQ flavored Potato chips!',
                    'has bought you a bag of opened Potato chips.'
                ],
                getChips: function () {
                    var c = Math.floor(Math.random() * this.chipss.length);
                    return this.chipss[c];
                },
                functionality: function (chat, cmd) {
                    if (this.type === 'exact' && chat.message.length !== cmd.length) return void (0);
                    if (!basicBot.commands.executable(this.rank, chat)) return void (0);
                    else {
                        var msg = chat.message;

                        var space = msg.indexOf(' ');
                        if (space === -1) {
                            API.sendChat(basicBot.chat.eatchips);
                            return false;
                        }
                        else {
                            var name = msg.substring(space + 2);
                            var user = basicBot.userUtilities.lookupUserName(name);
                            if (user === false || !user.inRoom) {
                                return API.sendChat(subChat(basicBot.chat.nouserchips, {name: name}));
                            }
                            else if (user.username === chat.un) {
                                return API.sendChat(subChat(basicBot.chat.selfchips, {name: name}));
                            }
                            else {
                                return API.sendChat(subChat(basicBot.chat.chips, {nameto: user.username, namefrom: chat.un, chips: this.getChips()}));
                            }
                        }
                    }
                }
            },
            
            cupcakeCommand: {
                command: 'cupcake',
                rank: 'user',
                type: 'startsWith',
                cupcakes: ['has bought you a Chocolate cupcake!',
                    'has bought you a Strawberry cupcake!',
                    'has bought you a cupcake with a worm dancing! "I think that is a real worm."'
                ],
                getCupcake: function () {
                    var c = Math.floor(Math.random() * this.cupcakes.length);
                    return this.cupcakes[c];
                },
                functionality: function (chat, cmd) {
                    if (this.type === 'exact' && chat.message.length !== cmd.length) return void (0);
                    if (!basicBot.commands.executable(this.rank, chat)) return void (0);
                    else {
                        var msg = chat.message;

                        var space = msg.indexOf(' ');
                        if (space === -1) {
                            API.sendChat(basicBot.chat.eatcupcake);
                            return false;
                        }
                        else {
                            var name = msg.substring(space + 2);
                            var user = basicBot.userUtilities.lookupUserName(name);
                            if (user === false || !user.inRoom) {
                                return API.sendChat(subChat(basicBot.chat.nousercupcake, {name: name}));
                            }
                            else if (user.username === chat.un) {
                                return API.sendChat(subChat(basicBot.chat.selfcupcake, {name: name}));
                            }
                            else {
                                return API.sendChat(subChat(basicBot.chat.cupcake, {nameto: user.username, namefrom: chat.un, cupcake: this.getCupcake()}));
                            }
                        }
                    }
                }
            },
          
            burgerCommand: {
                command: 'burger',
                rank: 'user',
                type: 'startsWith',
                burgers: ['has bought you a Chicken burger! ',
                    'has bought you a Cajun Chicken burger!.'
                ],
                getBurger: function () {
                    var c = Math.floor(Math.random() * this.burgers.length);
                    return this.burgers[c];
                },
                functionality: function (chat, cmd) {
                    if (this.type === 'exact' && chat.message.length !== cmd.length) return void (0);
                    if (!basicBot.commands.executable(this.rank, chat)) return void (0);
                    else {
                        var msg = chat.message;

                        var space = msg.indexOf(' ');
                        if (space === -1) {
                            API.sendChat(basicBot.chat.eatdrink);
                            return false;
                        }
                        else {
                            var name = msg.substring(space + 2);
                            var user = basicBot.userUtilities.lookupUserName(name);
                            if (user === false || !user.inRoom) {
                                return API.sendChat(subChat(basicBot.chat.nouserburger, {name: name}));
                            }
                            else if (user.username === chat.un) {
                                return API.sendChat(subChat(basicBot.chat.selfburger, {name: name}));
                            }
                            else {
                                return API.sendChat(subChat(basicBot.chat.burger, {nameto: user.username, namefrom: chat.un, burger: this.getBurger()}));
                            }
                        }
                    }
                }
            },
    }
