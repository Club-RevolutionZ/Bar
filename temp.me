    BarTender:
    {
            pizzaCommand: {
                command: 'pizza',
                rank: 'user',
                type: 'startsWith',
                pizzas: ['has bought you a Chicken pizza!',
                    'has bought you a Hawaiian pizza!',
                    'has bought you a half eaten pizza.'
                ],
                getPizza: function () {
                    var c = Math.floor(Math.random() * this.piza.length);
                    return this.pizzas[c];
                },
                functionality: function (chat, cmd) {
                    if (this.type === 'exact' && chat.message.length !== cmd.length) return void (0);
                    if (!basicBot.commands.executable(this.rank, chat)) return void (0);
                    else {
                        var msg = chat.message;

                        var space = msg.indexOf(' ');
                        if (space === -1) {
                            API.sendChat(basicBot.chat.eatpizza);
                            return false;
                        }
                        else {
                            var name = msg.substring(space + 2);
                            var user = basicBot.userUtilities.lookupUserName(name);
                            if (user === false || !user.inRoom) {
                                return API.sendChat(subChat(basicBot.chat.nouserpizza, {name: name}));
                            }
                            else if (user.username === chat.un) {
                                return API.sendChat(subChat(basicBot.chat.selfpizza, {name: name}));
                            }
                            else {
                                return API.sendChat(subChat(basicBot.chat.pizza, {nameto: user.username, namefrom: chat.un, pizza: this.getPizza()}));
                            }
                        }
                    }
                }
            },
            
            
            
            -----------------------------------------------
            cookieCommand: {
                command: 'cookie',
                rank: 'residentdj',
                type: 'startsWith',
                cookies: ['has bought you a chocolate chip cookie!',
                    'has bought you a soft homemade oatmeal cookie!',
                    'has bought you a plain, dry, old cookie. It was the last one in the bag. Gross.',
                    'bought you a sugar cookie. What, no frosting and sprinkles? 0/10 would not touch.',
                    'bought you a chocolate chip cookie. Oh wait, those are raisins. Bleugh!',
                    'bought you an enormous cookie. Poking it gives you more cookies. Weird.',
                    'bought you a fortune cookie. It reads "Why are you not working on any projects?"',
                    'bought you a fortune cookie. It reads "Give that special someone a compliment"',
                    'bought you a fortune cookie. It reads "Take a risk!"',
                    'bought you a fortune cookie. It reads "Go outside."',
                    'bought you a fortune cookie. It reads "Do not forget to eat your veggies!"',
                    'bought you a fortune cookie. It reads "Do you even lift?"',
                    'bought you a fortune cookie. It reads "m808 pls"',
                    'bought you a fortune cookie. It reads "If you move your hips, you will get all the ladies."',
                    'bought you a fortune cookie. It reads "I love you."',
                    'bought you a Golden Cookie. You cannot eat it because it is made of gold. Dammit.',
                    'bought you an Oreo cookie!',
                    'bought you a rainbow cookie made with love :heart:',
                    'bought you an old cookie that was left out in the rain, its moldy.',
                    'bought you fresh cookies, it smells amazing.'
                ],
                getCookie: function () {
                    var c = Math.floor(Math.random() * this.cookies.length);
                    return this.cookies[c];
                },
                functionality: function (chat, cmd) {
                    if (this.type === 'exact' && chat.message.length !== cmd.length) return void (0);
                    if (!basicBot.commands.executable(this.rank, chat)) return void (0);
                    else {
                        var msg = chat.message;

                        var space = msg.indexOf(' ');
                        if (space === -1) {
                            API.sendChat(basicBot.chat.eatcookie);
                            return false;
                        }
                        else {
                            var name = msg.substring(space + 2);
                            var user = basicBot.userUtilities.lookupUserName(name);
                            if (user === false || !user.inRoom) {
                                return API.sendChat(subChat(basicBot.chat.nousercookie, {name: name}));
                            }
                            else if (user.username === chat.un) {
                                return API.sendChat(subChat(basicBot.chat.selfcookie, {name: name}));
                            }
                            else {
                                return API.sendChat(subChat(basicBot.chat.cookie, {nameto: user.username, namefrom: chat.un, cookie: this.getCookie()}));
                            }
                        }
                    }
                }
            },
    }
