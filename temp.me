!duel, with each outcome having 2 people fight and a winner in the end.
!dance
!typist, random word comes out, the last person to type the word is loser.
!battleroyale, make it like WWE battle royale use the roulette code
!avatar, battle with elements

http://en.wikipedia.org/wiki/Category:Cookies

,
    "eatfood": "/me For the brtender himself",
    "nouserfood": "/me doesn't see %%NAME%% in room SUM1 who can't be found in room",
    "selffood": "' @%%NAME%% FOR selfish user who bought for themself",
    "food": "/me @%%NAMETO%%, @%%NAMEFROM%% %%FOOD%%"

    
            
            foodCommand: {
                command: 'food',
                rank: 'residentdj',
                type: 'startsWith',
                foods: ['has bought you a chocolate chip food!',
                    'has bought you a soft homemade oatmeal food!',
                    'bought you fresh foods, it smells amazing.'
                ],
                getFood: function () {
                    var c = Math.floor(Math.random() * this.foods.length);
                    return this.foods[c];
                },
                functionality: function (chat, cmd) {
                    if (this.type === 'exact' && chat.message.length !== cmd.length) return void (0);
                    if (!basicBot.commands.executable(this.rank, chat)) return void (0);
                    else {
                        var msg = chat.message;

                        var space = msg.indexOf(' ');
                        if (space === -1) {
                            API.sendChat(basicBot.chat.eatfood);
                            return false;
                        }
                        else {
                            var name = msg.substring(space + 2);
                            var user = basicBot.userUtilities.lookupUserName(name);
                            if (user === false || !user.inRoom) {
                                return API.sendChat(subChat(basicBot.chat.nouserfood, {name: name}));
                            }
                            else if (user.username === chat.un) {
                                return API.sendChat(subChat(basicBot.chat.selffood, {name: name}));
                            }
                            else {
                                return API.sendChat(subChat(basicBot.chat.food, {nameto: user.username, namefrom: chat.un, food: this.getFood()}));
                            }
                        }
                    }
                }
            },
            
            
            
 switch (rankString) {
                    case "admin":
                        rankInt = 10;
                        break;
                    case "ambassador":
                        rankInt = 7;
                        break;
                    case "host":
                        rankInt = 10; //5
                        break;
                    case "cohost":
                        rankInt = 4;
                        break;
                    case "manager":
                        rankInt = 3;
                        break;
                    case "bouncer":
                        rankInt = 2;
                        break;
                    case "residentdj":
                        rankInt = 1;
                        break;
                    case "user":
                        rankInt = 0;
                        break;
